<project name="CheckersBot" default="main">
	<description>
    	CheckersBot build file
    </description>

	<!-- set properties for this build -->
	<property environment="env" />
	<property file="build.properties" />

	<!-- check whether nxj.home is correct -->
	<available file="${nxj.home}/lib/pc" property="lejos.pc.exists" />
	<available file="${nxj.home}/lib/nxt" property="lejos.nxt.exists" />
	<fail unless="lejos.pc.exists" message="nxj.home variable incorrect, ${nxj.home}/lib/pc does not exist" />
	<fail unless="lejos.nxt.exists" message="nxj.home variable incorrect, ${nxj.home}/lib/nxt does not exist" />

	<!-- define the search paths -->
	<path id="lejos.pc">
		<fileset dir="${nxj.home}/lib/pc">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<path id="lejos.nxt">
		<fileset dir="${nxj.home}/lib/nxt">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<condition property="d32Flag" value="-d32" else="-Dblank.dummy.arg=">
		<and>
			<os family="mac" />
		</and>
	</condition>

	<!-- deletes generated files -->
	<target name="clean" description="clean up all generated files">
		<delete dir="${build.dir}" />
	</target>

	<!-- compiles source -->
	<target name="compile" depends="clean" description="compile the source">
		<!-- Compile the java code from ${source.dir} to ${classes.dir}  -->
		<mkdir dir="${classes.dir}" />
		<javac
			srcdir="${source.dir}"
			includes="${source.include}"
			excludes="${source.exclude}"
			encoding="${source.encoding}"
			destdir="${classes.dir}"
			debug="true"
			includeAntRuntime="false"
			includeJavaRuntime="false"
			verbose="false"

		>
			<classpath refid="lejos.pc" />
			<!-- enable warnings -->
			<compilerarg value="-Xlint:${source.warn}" />
		</javac>
	</target>

	<!-- creates jar file -->
    <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar
        	destfile="${jar.dir}/${ant.project.name}.jar"
        >
        	<fileset dir="${classes.dir}" includes="${jar.includes}" excludes="{jar.excludes}" />
        	<fileset dir="${resources.dir}" includes="${resources.includes}" excludes="${resources.excludes}" />
        	
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
                <attribute name="Class-Path" value="${nxj.home}/lib/pc/pccomm.jar" />
            </manifest>
        </jar>
    </target>
	
	<!-- generates javadocs -->
	<target name="docs" description="generate javadocs">
		<delete dir="${docs.dir}" />
    	<mkdir dir="${docs.dir}" />
		<javadoc
			destdir="${docs.dir}"
			source="${source.version}"
			encoding="${source.encoding}"
			charset="utf-8"
			locale="en_US"
			author="true"
			access="protected"
			windowtitle="Project documentation"
			verbose="false"
		>
			<classpath refid="lejos.pc" />
			<!--
				Without this, there are some JDK jars in the classpath.
				Set verbose=true to check that the classpath is really clean.
			-->
    		<arg value="-extdirs" />
    		<arg value="" />
			
			<fileset
				dir="${source.dir}"
				includes="${source.include}"
				excludes="${source.exclude}"
			/>
		</javadoc>
	</target>

	<target name="main" description="compile and generate documentation" depends="jar,docs"/>
</project>